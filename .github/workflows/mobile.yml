on:
  repository_dispatch:
    types: [mobile_build]

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    steps:
      - name: create check
        id: check
        uses: ./.github/actions/create-check
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: ${{ github.repository }}
          sha: ${{ github.sha }}
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
      - run: pnpm i
      - run: pnpm build
      - run: pnpm cap sync android && pnpm cap build android --release
      - uses: sigstore/cosign-installer@v3
      - uses: anchore/sbom-action@v0
        with:
          output-file: cyclonedx.json
          format: cyclonedx-json
          path: android/app/build/outputs/apk/release/app-release.apk
      - name: cosign sign apk
        run: cosign sign --yes --key ${{ secrets.COSIGN_PRIVATE_KEY }} android/app/build/outputs/apk/release/app-release.apk
      - name: cosign sign sbom
        run: cosign sign --yes --key ${{ secrets.COSIGN_PRIVATE_KEY }} cyclonedx.json
      - name: cosign attest
        run: cosign attest --yes --key ${{ secrets.COSIGN_PRIVATE_KEY }} --predicate cyclonedx.json android/app/build/outputs/apk/release/app-release.apk > build-provenance.json
      - name: cosign verify
        run: |
          cosign verify --key ${{ secrets.COSIGN_PUBLIC_KEY }} android/app/build/outputs/apk/release/app-release.apk
          cosign verify --key ${{ secrets.COSIGN_PUBLIC_KEY }} cyclonedx.json
      - name: upload provenance
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: provenance
          path: |
            build-provenance.json
            cyclonedx.json
      - name: calc sha
        id: sha
        run: echo "sha=$(sha256sum android/app/build/outputs/apk/release/app-release.apk | cut -d' ' -f1)" >> $GITHUB_OUTPUT
      - name: upload artifact
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          files: android/app/build/outputs/apk/release/app-release.apk
      - name: update app-info.json
        run: node scripts/update-app-info.js ${{ steps.sha.outputs.sha }} ${{ github.event.client_payload.version }}
      - uses: EndBug/add-and-commit@v9

  deploy-canary:
    needs: build-android
    runs-on: ubuntu-latest
    steps:
      - run: echo "deploying canary 10% via Capgo"
      - id: sentry
        run: echo "error_rate=0" >> $GITHUB_OUTPUT

  promote-prod:
    needs: deploy-canary
    if: ${{ needs.deploy-canary.outputs.error_rate < 0.5 }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "promoting canary to prod"
