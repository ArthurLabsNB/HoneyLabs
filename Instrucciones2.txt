✅ I. Importación/Exportación por QR (Intercambio entre cuentas o dispositivos)
🎯 Objetivo
Permitir compartir información completa y estructurada (almacenes, materiales, unidades) entre cuentas o dispositivos usando códigos QR, tanto en PC como en móvil.

🧩 Qué debe hacer cada QR (según entidad):
1. 📦 QR de un Almacén
Contiene toda la estructura del almacén, incluyendo:

✅ Solución esperada — puntos claros para implementación
1. 📦 Estructura y lógica del movimiento ✅
 Cada movimiento en historial debe contener:

ID único del movimiento ✅

Tipo de movimiento (creación, edición, entrada, salida, etc.) ✅

Referencia al objeto afectado (unidadId, materialId, almacenId) ✅

Snapshot o payload completo del contenido guardado ✅

Archivos e imágenes si fueron subidos ✅

Usuario que lo hizo y fecha de ejecución ✅

2. 🧠 Lógica al clickear un movimiento ✅
 Crear una función handleClickMovimiento(movimientoId) que:


Su nombre, descripción, propiedades

 Haga fetch a la base de datos (vía Prisma o API interna) del contenido asociado. ✅

 Determine si es de tipo unidad, material, almacén, etc. ✅

 Construya una estructura de solo lectura con la información asociada. ✅

 Envíe esta información al panel de Forms en modo preview. ✅

3. 🖼️ Renderización del panel de Forms en modo "previsualización" ✅
 El panel debe:

 Desactivarse para edición (modo "read-only"). ✅

 Renderizar todos los campos guardados (descripción, cantidades, propiedades numéricas). ✅

 Renderizar correctamente imágenes y archivos subidos (PDFs, fotos, etc). ✅

 Si el backup incluye unidadId, debe mostrar la estructura completa de esa unidad. ✅

4. 🔍 Botón de historial por campo ✅
 Encima de cada campo mostrado, agregar un botón pequeño tipo ícono (🕓).

Al escanearlo:

Último usuario que modificó ese campo ✅

Fecha exacta de la modificación ✅

Valor anterior (si aplica) ✅

5. ✅ Indicadores visuales ✅
 Al seleccionar un movimiento:

 Resaltar la tarjeta activa en el historial. ✅

 Cambiar el panel de Forms a modo preview. ✅

 Mostrar un título arriba: "Vista de respaldo del movimiento: [tipo] - [fecha]". ✅

6. 🧪 Validaciones y fallos ✅
 Si el movimiento no tiene datos asociados (unidad eliminada o referenciada incorrectamente):

Mostrar mensaje: ❌ “Este movimiento no tiene datos disponibles.” ✅

 Loggear errores de fetch o parseo con detalles para depuración. ✅

7. 🔄 Modularidad para otros tipos ✅
 Esta lógica debe funcionar no solo con unidades, sino también:

 Materiales ✅

 Archivos del almacén ✅

 Título del almacén ✅

 Cambios en stock o entradas/salidas ✅


Si no hay selección manual, se asume por contexto:

Si estás en pantalla de salida → se registra como salida

Si estás en entrada → como entrada, etc.

✅ Una vez confirmada:

Se genera automáticamente un registro en historial de movimientos, incluyendo:

Usuario

Fecha/hora

Tipo de movimiento

Unidad o material afectado

Observaciones (si aplica)

💡 Alternativa de funcionamiento automático
Para flujos más rápidos:

 Permitir activar modo “automático”

En ese modo:

Cada escaneo de unidad → se registra automáticamente como entrada o salida, sin confirmación

Se muestra una breve notificación: “✅ Movimiento registrado: Entrada de unidad X”
