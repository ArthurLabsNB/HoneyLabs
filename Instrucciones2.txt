üü® 1. Principios de Estructura del Navbar para Pizarras
Ubicaci√≥n:
El navbar dedicado de la pizarra siempre debe estar fijo en la parte superior (‚Äústicky top-0 w-full z-50‚Äù) sobre la pizarra, ocultando el navbar global y sidebar.

Consistencia:
La estructura del navbar debe ser horizontal, minimalista, y contener todos los botones esenciales y avanzados, agrupados de forma l√≥gica y escalable (por secciones).

Distribuci√≥n modular:
Los botones y controles se agrupan en ‚Äúcl√∫steres‚Äù funcionales, alineados de izquierda a derecha, seg√∫n frecuencia de uso y tipo de acci√≥n (por ejemplo: navegaci√≥n, edici√≥n, colaboraci√≥n, exportaci√≥n, automatizaci√≥n, ayuda, etc).

üü© 2. Estructura sugerida de navbar (listo para 60+ funciones)
Imagina el navbar dividido en bloques:

less
Copiar
Editar
[ ‚Üê Volver ] | [ Logo + Nombre editable ] | [ Guardar ] [ Exportar ] [ Compartir ] [ Presentar ] | [ Edici√≥n y gesti√≥n ] | [ Colaboraci√≥n ] | [ Automatizaci√≥n ] | [ Ayuda/Opciones ] | [ Vista/Zoom ] | [ Salir ]
Bloque 1: Navegaci√≥n

Volver a paneles

Logo HoneyLabs mini

Nombre de la pizarra (editable inline)

Bloque 2: Acciones r√°pidas

Guardar

Exportar

Compartir

Presentar

Bloque 3: Edici√≥n y gesti√≥n

Deshacer/Rehacer

Historial de cambios

Vista de cambios (comparar versiones)

Configuraci√≥n avanzada (men√∫ desplegable)

Plantillas

Vista Kanban/Gantt (si aplica)

Editor de animaciones (si aplica)

Bloque 4: Colaboraci√≥n

Avatares en tiempo real

Comentarios

Chat contextual

Notificaciones

Roles y permisos

Bloque 5: Automatizaci√≥n y anal√≠tica

Macros/automatizaci√≥n

Panel de m√©tricas

Integraci√≥n IA (bot√≥n desplegable)

Wiki/documentaci√≥n

Webhooks/API

Bloque 6: Personalizaci√≥n y ayuda

Selector de temas (claro/oscuro)

Ayuda/tutorial

Atajos de teclado

Wiki/documentaci√≥n

Configuraci√≥n personal

Bloque 7: Vista y zoom

Zoom in/out, fit to screen, mini mapa

Selector de vistas/presets

Bloque 8: Salir

Salir/cerrar pizarra

Cada bloque se puede convertir en un men√∫ desplegable si tienes muchas opciones. As√≠ el navbar nunca se satura y sigue siendo intuitivo.

üü¶ 3. Estructura visual y l√≥gica del navbar en c√≥digo (ejemplo base)

Cada Dropdown puede ser un men√∫ de opciones relacionadas para no saturar el espacio.

üü® 4. Al crear una pizarra nueva, que est√© REALMENTE en blanco
Requisitos:

Sin widgets ni tarjetas pre-cargadas.

Solo muestra la superficie de la pizarra (canvas) y el navbar superior.

Quiz√° solo una peque√±a indicaci√≥n visual (placeholder discreto tipo ‚ÄúHaz clic derecho o usa el bot√≥n [+] para agregar tu primer elemento‚Äù).

Todos los men√∫s deben estar activos y listos para a√±adir, pero ning√∫n elemento en el canvas por defecto.

L√≥gica para la IA/desarrollador:

Si se detecta que la pizarra no contiene ning√∫n elemento en su estructura de datos, no renderices ning√∫n widget/complemento. Solo el canvas vac√≠o y el navbar. Muestra, si quieres, una ayuda contextual minimalista solo hasta que el usuario agregue algo.

üüß 5. Tips de UX adicionales
El navbar debe ser responsive y scrollable si hay muchas funciones.

En mobile/tablet, convierte bloques en men√∫s hamburger o tabs laterales.

Usa iconos claros y tooltips en todos los botones.

Al agregar nuevas funciones, solo debes crear un nuevo bloque/grupo en el navbar, sin modificar toda la estructura base.

